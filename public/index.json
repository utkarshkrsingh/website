
[{"content":"","date":"23 March 2025","externalUrl":null,"permalink":"/tags/gnu-make/","section":"Tags","summary":"","title":"GNU Make","type":"tags"},{"content":"","date":"23 March 2025","externalUrl":null,"permalink":"/tags/go/","section":"Tags","summary":"","title":"Go","type":"tags"},{"content":"","date":"23 March 2025","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":"Itâ€™s been an incredible journey building Ripple from the ground up. What started as a simple ideaâ€”creating a more intuitive and cross-platform build automation toolâ€”has now become a functional reality. Ripple is no longer just an idea; itâ€™s a tool that simplifies task automation, making it more accessible to both beginners and experienced developers.\nWhat Ripple Achieves # Ripple now supports Linux, macOS, and Windows, staying true to its goal of being a truly cross-platform alternative to GNU Make. One of its core strengths is how it automatically executes dependent tasks before running the main task, ensuring that project dependencies are always in place before execution. With ripple.toml, a simple configuration file placed in the root of each project, users can define their build steps in an intuitive wayâ€”no complex syntax, no unnecessary learning curve.\nThe Road Ahead # Although Ripple has reached a solid working state, this is just the beginning. There are many optimizations and features I plan to implement. The long-term vision is to make Ripple a powerful yet easy-to-use automation tool that fits seamlessly into any development workflow. I also hope to involve more contributors in the project, expanding its capabilities and refining it through community collaboration.\nIf youâ€™re a developer passionate about build systems, automation, or simply curious to contribute to an open-source project, I invite you to join me in shaping Rippleâ€™s future. The possibilities are endless, and together, we can build something remarkable.\nWith that, Iâ€™m signing off from this chapter of Rippleâ€™s story. But stay tunedâ€”this is only the beginning!\nHappy coding! ðŸš€\n","date":"23 March 2025","externalUrl":null,"permalink":"/projects/1752665394534-ripple-update/","section":"Projects","summary":"","title":"Ripple Update","type":"projects"},{"content":"","date":"23 March 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"23 March 2025","externalUrl":null,"permalink":"/","section":"utkarshkrsingh","summary":"","title":"utkarshkrsingh","type":"page"},{"content":"I was thinking about GNU Make, a build automation tool that automates the process of compiling and building software projects. Though it\u0026rsquo;s a fantastic tool in the developer\u0026rsquo;s realm, learning or starting to use it can be a bit overwhelming at first, mainly due to its syntax, white-space sensitivity, and complexity for large projects. Even I faced some problems when I first started using it. This gave me an idea, why don\u0026rsquo;t I build it again from scratch, simplifying it for both beginners and advanced users?\nWhy from scratch ? # Why not? Making something from scratch can give you insight into how it works, how it was initially designed, and the challenges that developers overcame. Building something from scratch will bring you a wealth of experience in return, and you can add new features along the way. For this, I chose Go as the primary language. Since I am exploring Go, this project will give me valuable insight into system-level programming. I named the project \u0026ldquo;Ripple\u0026rdquo;, just like ripples in water, executing one task can trigger multiple dependent tasks.\nUnlike GNU Make, which is not natively available on Windows, I aim to make Ripple available for Linux, macOS, and even Windows. Unlike GNU Make, which requires additional tools to work properly on Windows, I intend to make Ripple readily available, just install it and use it, no additional setup required.\nThough Ripple is still under development, I can see it becoming a fully-fledged tool that could potentially replace GNU Make someday if everything goes as planned. Right now, I am working on Ripple alone, but I intend to invite all my fellow Gophers who want to create something new, innovative, and exciting to use.\nWith this, I am signing off and will keep you updated!\n","date":"1 February 2025","externalUrl":null,"permalink":"/projects/1752665246054-ripple/","section":"Projects","summary":"","title":"Ripple","type":"projects"},{"content":"","date":"11 November 2024","externalUrl":null,"permalink":"/tags/inotify/","section":"Tags","summary":"","title":"Inotify","type":"tags"},{"content":"I recently started working on a project and generally use Neovim as my code editor. However, I had to exit Neovim to compile and run my code, then reopen it, which became inconvenient. To streamline the process, I came up with an idea for a program that monitors a specified directory for file modifications. If any file is modified, it checks the file type against a config file. If a match is found, it automatically compiles and runs the file.\nI chose Go as the language for this project. Since I am currently learning it, this project gives me valuable insight into system-level programming in Go. I named the program \u0026ldquo;snag\u0026rdquo;â€”not the best name, but it serves the purpose. At this stage, snag doesnâ€™t support a config file and only works with Python, Go, C, and C++. Support for a config file is planned for a future release. I havenâ€™t considered cross-platform compatibility yet, so Iâ€™m not sure if Iâ€™ll make it compatible with Windows or macOS.\nWhat does snag use under the hood ? # There is a Linux service called inotify, which monitors every directory in the file system and keeps track of the files within it. All file explorers use it to manage file accessibility. I used fsnotify, a Go module that provides bindings for inotify, enabling its use in Go. Additionally, I used fatih/color, a module that adds color to terminal text.\nWhat do I think about snag ? # Itâ€™s a great project for Linux users who want to gain a deeper understanding of how file systems work in Linux. I believe anyone using Linux should try coding a similar program in the language of their choice. While snag may seem simple at first glance, it has a depth that makes it an interesting project. In the end, I encourage everyone to give it a try and see how far they can take it. Creating new programs is the core purpose of a programmer, and making it exceptional adds a personal touch as a skilled programmer. Thank you. I will keep you updated on the progress of this project.\n","date":"11 November 2024","externalUrl":null,"permalink":"/projects/1752665533660-snag/","section":"Projects","summary":"","title":"Snag","type":"projects"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]